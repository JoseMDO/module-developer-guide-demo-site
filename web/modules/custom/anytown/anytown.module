<?php

/**
 * @file
 * Hook implementations for anytown module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function anytown_help($route_name, RouteMatchInterface $route_match) {
  // Primary help page for the module will be at "help.page.$modulename".
  if ($route_name === 'help.page.anytown') {
    // Example of accessing a service via a hook, where you can't perform
    // dependency injection.
    /** @var \Drupal\Core\Session\AccountProxyInterface $current_user */
    $current_user = \Drupal::service('current_user');

    return '<p>' . t("Hi %name, the anytown module provides code specific to the Anytown Farmer's market website. This includes the weather forecast page, block, and related settings.", ['%name' => $current_user->getDisplayName()]) . '</p>';
  }
}

/**
 * Implements hook_theme().
 */
function anytown_theme() {
  return [
    'weather_page' => [
      'variables' => [
        'weather_intro' => '',
        'weather_forecast' => '',
        'short_forecast' => '',
        'weather_closures' => '',
      ],
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function anytown_form_user_login_form_alter(&$form, FormStateInterface $form_state) {
  // Add our custom validation handler.
  $form['#validate'][] = 'anytown_user_register_validate';

  $form['terms_of_use'] = [
    '#type' => 'fieldset',
    '#title' => t('Anytown Terms and Conditions of Use'),
    '#weight' => 10,
    // Admin users can skip the terms of use, this will let them create accounts
    // for other people without seeing these fields.
    '#access' => !\Drupal::currentUser()->hasPermission('administer users')
  ];

  $form['terms_of_use']['terms_of_use_data'] = [
    '#type' => 'markup',
    '#markup' => '<p>By checking the box below you agree to our terms of use. Whatever that might be. ¯\_(ツ)_/¯</p>',
    '#allowed_tags' => ['iframe'],
  ];

  $form['terms_of_use']['terms_of_use_checkbox'] = [
    '#type' => 'checkbox',
    '#title' => t('I agree with the terms above'),
    '#required' => TRUE,
  ];
}

/**
 * Custom validation handler for the user registration form.
 */
function anytown_user_register_validate(&$form, FormStateInterface $form_state) {
  if ($form_state->getValue('name') === 'anytown') {
    $form_state->setErrorByName('name', t('The username "anytown" is invalid. Please choose a different name.'));
  }
}